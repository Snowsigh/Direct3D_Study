Texture2D g_txDiffuse : register(t1);
SamplerState g_Sampler : register(s0);

cbuffer kbData
{
	matrix g_matWorld	: packoffset(c0);
	matrix g_matView	: packoffset(c4);
	matrix g_matProj	: packoffset(c8);	
	float g_fTimer		: packoffset(c12.z);
};
struct VS_IN
{
	float3 p : POSITION;
	float3 n : NOMAL;
	float4 c : COLOR0;
	float2 t : TEX;
};

struct VS_OUT
{
	float4 p : SV_POSITION;
	float3 n : NORMAL;
	float4 c : COLOR0;
	float2 t : TEXCOORD0;
};

VS_OUT VertexS (VS_IN pv ) 
{
	VS_OUT output = (VS_OUT )0;
	float4 vLocal = float4(pv.p,1.0f);	
	float4 vWorld = mul( vLocal, g_matWorld);
	float4 vView = mul( vWorld, g_matView);
	float4 vProj = mul( vView, g_matProj);

	output.p = vProj;
	output.n = pv.n;
	output.c = pv.c;
	output.t = pv.t;
	return output;
}

float4 PixelS( VS_OUT pv ) : SV_TARGET
{
	return g_txDiffuse.Sample(g_Sampler, pv.t) *pv.c;
}
